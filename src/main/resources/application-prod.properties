spring.application.name=temporally

spring.data.mongodb.uri=mongodb://root:example@temporally_mongodb/temporally?authSource=admin

# Spring Docker Configuration
spring.docker.compose.lifecycle-management=start_and_stop

# Open API Configuration
springdoc.api-docs.path=/v1/api-docs

# Elements take their values from the maven pom.xml build-related information
documentation.application.description=@project.description@
documentation.application.version=@project.version@

# JWT Configuration properties
authorization.jwt.secret=${JWT_SECRET}
authorization.jwt.expiration.days=7

# Oath goggle credentials
# Remember credentials are stored in the environment variables
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=profile,email
# Goggle providers url
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://accounts.google.com/o/oauth2/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo